// unit root settings: Mono0Unit.Definition
// name: string | undefined
// tags: string[]
// include: string[] | true | undefined
// exclude: string[] | undefined
// srcIndexFile: string | true | undefined
// srcDir: string | true | undefined
// distDir: string | undefined
// tsconfig: Mono0Tsconfig.Definition | undefined
// tsconfigs: Record<string, Mono0Tsconfig.Definition>
// packageJson: Mono0PackageJson.Definition | undefined
// preset: string | string[]
// deps: Mono0Unit.DependencyDefinition[]

// tsconfig.settings: Mono0Tsconfig.DefinitionSettings
// addUnitIncludeToInclude: 'override' | 'prepend' | 'append' | 'whenNotProvided' | undefined
// addUnitExcludeToExclude: 'override' | 'prepend' | 'append' | 'whenNotProvided' | undefined
// setUnitDistAsOutDir: boolean | undefined
// setUnitSrcAsRootDir: boolean | undefined
// clearPaths: boolean | undefined
// addSelfSrcToPaths: boolean | undefined
// addUnitsSrcToPaths: boolean | string | { scope?: 'all' | 'deps' | 'deepDeps' | 'depsAndDeepDeps', match?: string, indexFile?: boolean, deepDeps?: boolean | string } | undefined
// addUnitsDistToPaths: boolean | string | { scope?: 'all' | 'deps' | 'deepDeps' | 'depsAndDeepDeps', match?: string, indexFile?: boolean, deepDeps?: boolean | string } | undefined
// clearReferences: boolean | undefined
// addUnitsAsReferences: boolean | string | { scope?: 'all' | 'deps' | 'deepDeps' | 'depsAndDeepDeps', match?: string, tsconfig?: string, deepDeps?: boolean | string } | undefined
// addUnitsIncludesAndExcludes: boolean | string | { scope?: 'all' | 'deps' | 'deepDeps' | 'depsAndDeepDeps', match?: string, tsconfig?: string | null, deepDeps?: boolean | string } | undefined

// packageJson.settings: Mono0PackageJson.DefinitionSettings
// setUnitNameAsName: boolean | undefined
// clearWorkspaces: boolean | string | undefined
// addWorkspaces: boolean | string | undefined
// clearWorkspaceDeps: boolean | undefined
// addWorkspaceDeps: boolean | undefined
// clearExports: boolean | undefined
// addExportsFromDist: boolean | { indexFile?: boolean, dirs?: boolean, import?: boolean | string[], require?: boolean | string[], node?: boolean | string[], development?: boolean | string[], types?: boolean | string[] } | undefined
// addExportsFromSrc: boolean | { indexFile?: boolean, dirs?: boolean, import?: boolean | string[], require?: boolean | string[], node?: boolean | string[], development?: boolean | string[], types?: boolean | string[] } | undefined
// sortExports: boolean | string[] | undefined

{
  "unitsConfigsGlob": "{modules,apps,tools}/**/mono0.json",
  "filesSelectors": {
    "exclude": ["**/dist/**/*", "**/node_modules/**/*", "**/public/**/*"],
    "test": ["**/test/**/*", "**/*.test.*"]
  },
  "unitsSelectors": {
    // "test": ["@test/slow", "#test"]
  },
  "settings": {
    // "onPackageJsonsDepsChangedCommand": "bun install"
  },
  "packageJson": {
    "path": "../package.json",
    "settings": {
      "clearWorkspaces": "workspaces.papackages",
      "addWorkspaces": "workspaces.packages"
    },
    "value": {
      "name": "ideanick",
      "private": true,
      "type": "module",
      "scripts": {
        "types": "bun run mono0 exec bun run types",

        // Option 1 — import from packages
        // "build": "bun run mono0 exec -m '#cold' bun run build",
        // "watch": "bun run mono0 exec -m '#cold' bun run watch",

        // Option 2 — use paths and full references
        "build": "tsc --build",
        "watch": "tsc --watch",

        "clean": "bun run mono0 exec bun run clean"
      }
    }
  },
  "tsconfigs": {
    "base": {
      "path": "./tsconfig.base.json",
      "settings": {
        // Option 2 — use paths and full references
        "addUnitsSrcToPaths": { "match": "!#cold", "indexFile": true },
        "addUnitsDistToPaths": { "match": "#cold", "indexFile": true }
      },
      "value": {
        "compilerOptions": {
          "lib": ["ESNext"],
          "types": ["node", "bun"],
          "target": "ESNext",
          "strict": true,
          "jsx": "react-jsx",
          "esModuleInterop": true,
          "skipLibCheck": true,
          "module": "ESNext",
          "moduleResolution": "Bundler",
          "verbatimModuleSyntax": true,
          "resolveJsonModule": true,
          "paths": {
            "@trpc/server/*": ["~/node_modules/@trpc/server/*"]
          }
        }
      }
    },
    "root": {
      "path": "../tsconfig.json",
      "value": {
        "extends": "$base",
        "compilerOptions": {
          "composite": true,
          "tsBuildInfoFile": "~/node_modules/.cache/tsbuildinfo/root-core/.tsbuildinfo"
        }
      },
      "settings": {
        "addUnitsAsReferences": { "tsconfig": "$core" }
      }
    },
    "shared": {
      "path": "./tsconfig.shared.json",
      "value": {
        "extends": "$base"
      }
    },
    "backend": {
      "path": "./tsconfig.backend.json",
      "value": {
        "extends": "$base"
      }
    },
    "site": {
      "path": "./tsconfig.site.json",
      "value": {
        "extends": "$base",
        "compilerOptions": {
          "lib": ["DOM", "DOM.Iterable", "ES2022"],
          "types": ["node", "bun", "vite/client"],
          "target": "ES2022",
          "module": "ES2022"
        }
      }
    },
    "tools": {
      "path": "./tsconfig.tools.json",
      "value": {
        "extends": "$base"
      }
    }
  },
  "presets": {
    "force": {
      "srcDir": true,
      "distDir": "./dist",
      "include": true,
      "srcIndexFile": true,
      "exclude": ["$exclude"],
      "packageJson": {
        "settings": {
          "clearWorkspaceDeps": true,
          "addWorkspaceDeps": true,
          "clearExports": true,
          // Option 1 — import from packages
          // "addExportsFromDist": { "dirs": true, "import": [".js"], "indexFile": true },
          // "addExportsFromSrc": { "dirs": true, "node": [".ts", ".tsx"], "types": [".ts", ".tsx"], "indexFile": true },
          "sortExports": true
        },
        "value": {
          "private": true,
          "type": "module",
          "scripts": {
            "types": "tsc --noEmit",
            "build": "tsc --build",
            "watch": "tsc --watch --noEmitOnError false --skipLibCheck --noCheck --assumeChangesOnlyAffectDirectDependencies  --preserveWatchOutput",
            "clean": "rimraf {{projectRootDir}}/node_modules/.cache/tsbuildinfo/{{name}} && rimraf {{distDir}}"
          }
        }
      },
      "tsconfigs": {
        "core": {
          "path": "./tsconfig.json",
          "settings": {
            "setUnitSrcAsRootDir": true,
            "setUnitDistAsOutDir": true,
            "addUnitIncludeToInclude": "whenNotProvided",
            "addUnitExcludeToExclude": "whenNotProvided",

            // Option 1 — import from packages (we need in self package imports)
            // "addSelfSrcToPaths": true,
            // "addSelfSrcIndexFileToPaths": true,
            // "addUnitsAsReferences": { "scope": "depsAndDeepDeps", "tsconfig": "$core", "match": "#cold" } // we need only cold, as references, all other will be bundled via bundlers like vite or bun
            
            // Option 2 — use paths and full references
            "addUnitsAsReferences": { "scope": "deps", "tsconfig": "$core" } // we need all, becouse else we recieve x.ts is not listed within the file list of project
          },
          "value": {
            "compilerOptions": {
              "composite": true,
              "declaration": true,
              "declarationMap": true,
              "tsBuildInfoFile": "~/node_modules/.cache/tsbuildinfo/{{name}}/.tsbuildinfo",
              // Option 1 — import from packages (as we add own paths, so base paths not extends now)
              // "paths": {
              //   "@trpc/server/*": ["~/node_modules/@trpc/server/*"]
              // }
            }
          }
        }
      }
    },
    "app": {
      "tags": ["app"],
      "packageJson": {
        "settings": {
          "clearWorkspaceDeps": true,
          "addWorkspaceDeps": true,
          "clearExports": true,
          // Option 1 — import from packages
          // "addExportsFromDist": false,
          // "addExportsFromSrc": false
        }
      }
    },
    "cold": {
      "tags": ["cold"],
      "packageJson": {
        "settings": {
          // Option 1 — import from packages
          // "addExportsFromDist": { "dirs": true, "import": [".js"], "types": [".d.js"], "indexFile": true },
          // "addExportsFromSrc": false
        }
      }
    },
    "shared": {
      "tsconfig": {
        "value": {
          "extends": "$shared"
        }
      },
      "tags": ["shared"]
    },
    "backend": {
      "tsconfig": {
        "value": {
          "extends": "$backend"
        }
      },
      "tags": ["backend"]
    },
    "site": {
      "tsconfig": {
        "value": {
          "extends": "$site"
        }
      },
      "tags": ["site"]
    },
    "tools": {
      "tsconfig": {
        "value": {
          "extends": "$tools"
        }
      },
      "tags": ["tools"]
    }
  }
}
